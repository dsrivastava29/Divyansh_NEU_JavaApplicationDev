/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaceUI;

import business.Patient;
import business.VitalSign;
import java.awt.Color;
import java.util.Calendar;
import java.util.Date;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;

/**
 *
 * @author Divyansh
 */
public class CreatePatientJPanel extends javax.swing.JPanel {

    /**
     * Creates new form createPatientJPanel
     */
    Patient patient;

    public CreatePatientJPanel(Patient patient) {
        initComponents();
        this.patient = patient;
        int random = (int) (Math.random() * 10000);
        idJText.setText(String.valueOf(random));
        addVitalJPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dobJText = new javax.swing.JSpinner();
        nameJText = new javax.swing.JTextField();
        idJText = new javax.swing.JTextField();
        ageJTextLabel = new javax.swing.JLabel();
        addVitalNewPat = new javax.swing.JButton();
        addVitalJPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        respRateJText = new javax.swing.JTextField();
        heartRateJText = new javax.swing.JTextField();
        bloodPressureJText = new javax.swing.JTextField();
        weightJText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        primaryDoctorJText = new javax.swing.JTextField();
        prefPharmacyJText = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(698, 598));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Name");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Patient Id");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Date of Birth");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Age");

        dobJText.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1443228116629L), null, new java.util.Date(), java.util.Calendar.DAY_OF_MONTH));
        dobJText.setEditor(new javax.swing.JSpinner.DateEditor(dobJText, "yyyy/MM/dd"));
        dobJText.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dobJTextStateChanged(evt);
            }
        });

        nameJText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nameJTextKeyTyped(evt);
            }
        });

        ageJTextLabel.setText("0");

        addVitalNewPat.setBackground(new java.awt.Color(255, 204, 204));
        addVitalNewPat.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addVitalNewPat.setText("Add Vital Sign Now");
        addVitalNewPat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVitalNewPatActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Respiratory Rate");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Heart Rate");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Systolic Blood Pressure");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Weight");

        respRateJText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                respRateJTextKeyTyped(evt);
            }
        });

        heartRateJText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                heartRateJTextKeyTyped(evt);
            }
        });

        bloodPressureJText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bloodPressureJTextKeyTyped(evt);
            }
        });

        weightJText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                weightJTextKeyTyped(evt);
            }
        });

        jLabel11.setText("pounds");

        javax.swing.GroupLayout addVitalJPanelLayout = new javax.swing.GroupLayout(addVitalJPanel);
        addVitalJPanel.setLayout(addVitalJPanelLayout);
        addVitalJPanelLayout.setHorizontalGroup(
            addVitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addVitalJPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(addVitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(addVitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(respRateJText, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(heartRateJText)
                    .addComponent(bloodPressureJText)
                    .addComponent(weightJText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addContainerGap(95, Short.MAX_VALUE))
        );
        addVitalJPanelLayout.setVerticalGroup(
            addVitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addVitalJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addVitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(respRateJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addVitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(heartRateJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addVitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(bloodPressureJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addVitalJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel11)
                    .addComponent(weightJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Primary Doctor");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Preferred Pharmacy");

        primaryDoctorJText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                primaryDoctorJTextKeyTyped(evt);
            }
        });

        prefPharmacyJText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                prefPharmacyJTextKeyTyped(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 204, 204));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("Create Patient");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel12.setText("Create New Patient");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(270, 270, 270)
                .addComponent(jButton2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(267, 267, 267)
                .addComponent(addVitalNewPat)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addVitalJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 17, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(prefPharmacyJText, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                            .addComponent(idJText, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dobJText, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(79, 79, 79)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ageJTextLabel))
                            .addComponent(nameJText, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(primaryDoctorJText))
                        .addContainerGap(30, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nameJText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(idJText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(ageJTextLabel)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(dobJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel9)
                    .addComponent(primaryDoctorJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(prefPharmacyJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(addVitalNewPat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addVitalJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(7, 7, 7))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void dobJTextStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dobJTextStateChanged
        // TODO add your handling code here:
        long timeDiff = 0;
        timeDiff = Calendar.getInstance().getTimeInMillis() - ((Date) dobJText.getValue()).getTime();
        //    System.out.println("interfaceUI.CreatePatientJPanel.dobJTextStateChanged()"+timeDiff);
        ageJTextLabel.setText(String.valueOf(timeDiff / (365L * 24 * 60 * 60 * 1000)));
    }//GEN-LAST:event_dobJTextStateChanged

    private void addVitalNewPatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVitalNewPatActionPerformed
        // TODO add your handling code here:
        addVitalJPanel.setVisible(true);
    }//GEN-LAST:event_addVitalNewPatActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            if (validatePatient()) {

                //JDialog.setDefaultLookAndFeelDecorated(true);
                System.out.println("confirm");
                if (addVitalJPanel.isVisible()) {
                    if (validateVital()) {
                        VitalSign vs = patient.getVitalSignList().addVitalSign();
                        vs.setRespRate(Float.valueOf(respRateJText.getText()));
                        vs.setHeartRate(Float.valueOf(heartRateJText.getText()));
                        vs.setBloodPressure(Float.valueOf(bloodPressureJText.getText()));
                        vs.setWeight(Float.valueOf(weightJText.getText()));
                        vs.setCaptureTime(Calendar.getInstance().getTime());
                        int response = JOptionPane.showConfirmDialog(null, "Do you want to proceed with this patient", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                        if (response == JOptionPane.YES_OPTION) {
                            addPatientInfo();
                        }
                    } else {
                        int responseVital = JOptionPane.showConfirmDialog(null, "Do you want to proceed without adding Vital Sign?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                        if (responseVital == JOptionPane.YES_OPTION) {
                            addPatientInfo();
                        }
                    }
                } else {
                    int response = JOptionPane.showConfirmDialog(null, "Do you want to proceed with this patient", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (response == JOptionPane.YES_OPTION) {
                        addPatientInfo();
                    }
                }

                //JOptionPane.showMessageDialog(null, "Values saved successfull ", "Confirm",JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception e) {
            System.out.println("BAD INPUT FOUND");
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    private void addPatientInfo() {
        patient.setName(nameJText.getText());
        patient.setPatientID(idJText.getText());
        patient.setDob((Date) dobJText.getValue());
        patient.setPrimaryDoctor(primaryDoctorJText.getText());
        patient.setPrefPharmacy(prefPharmacyJText.getText());
        JOptionPane.showMessageDialog(null, "Patient created successfully ", "Success!!", JOptionPane.INFORMATION_MESSAGE);
        this.nameJText.setEditable(false);
        this.idJText.setEditable(false);
        this.dobJText.setEnabled(false);
        this.primaryDoctorJText.setEditable(false);
        this.prefPharmacyJText.setEditable(false);
        this.jButton2.setEnabled(false);
        this.addVitalNewPat.setEnabled(false);
        System.out.println("Values saved here" + nameJText.getText());
    }

    private boolean alphaCheckFail(char pressedKey) {
        if (!((Character.isAlphabetic(pressedKey)) || (pressedKey == ' '))) {
            return true;
        }
        return false;
    }

    private boolean NumDotCheckFail(char pressedKey) {
        if (!((Character.isDigit(pressedKey)) || (pressedKey == '.'))) {
            return true;
        }
        return false;
    }
    private void nameJTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameJTextKeyTyped
        // TODO add your handling code here:
        if (alphaCheckFail(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_nameJTextKeyTyped

    private void primaryDoctorJTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_primaryDoctorJTextKeyTyped
        // TODO add your handling code here:
        if (alphaCheckFail(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_primaryDoctorJTextKeyTyped

    private void prefPharmacyJTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prefPharmacyJTextKeyTyped
        // TODO add your handling code here:
        if (alphaCheckFail(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_prefPharmacyJTextKeyTyped

    private void respRateJTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_respRateJTextKeyTyped
        // TODO add your handling code here:
        if (NumDotCheckFail(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_respRateJTextKeyTyped

    private void heartRateJTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_heartRateJTextKeyTyped
        // TODO add your handling code here:
        if (NumDotCheckFail(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_heartRateJTextKeyTyped

    private void bloodPressureJTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bloodPressureJTextKeyTyped
        // TODO add your handling code here:
        if (NumDotCheckFail(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_bloodPressureJTextKeyTyped

    private void weightJTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_weightJTextKeyTyped
        // TODO add your handling code here:
        if (NumDotCheckFail(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_weightJTextKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addVitalJPanel;
    private javax.swing.JButton addVitalNewPat;
    private javax.swing.JLabel ageJTextLabel;
    private javax.swing.JTextField bloodPressureJText;
    private javax.swing.JSpinner dobJText;
    private javax.swing.JTextField heartRateJText;
    private javax.swing.JTextField idJText;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField nameJText;
    private javax.swing.JTextField prefPharmacyJText;
    private javax.swing.JTextField primaryDoctorJText;
    private javax.swing.JTextField respRateJText;
    private javax.swing.JTextField weightJText;
    // End of variables declaration//GEN-END:variables

    private boolean validateVital() {
        int wrongCount = 0;
        //Checking empty text fields
        if ((textBoxCheckerEmpty(respRateJText)) || (isNotNumberDotOnly(respRateJText))) {
            wrongCount++;
            //   System.out.println(respRateJText.getText().trim()+wrongCount);
        }
        if ((textBoxCheckerEmpty(heartRateJText)) || (isNotNumberDotOnly(heartRateJText))) {
            wrongCount++;
            //System.out.println(heartRateJText.getText().trim()+wrongCount);
        }
        if ((textBoxCheckerEmpty(bloodPressureJText)) || (isNotNumberDotOnly(respRateJText))) {
            wrongCount++;
            //System.out.println(bloodPressureJText.getText().trim()+wrongCount);
        }
        if ((textBoxCheckerEmpty(weightJText)) || (isNotNumberDotOnly(weightJText))) {
            wrongCount++;
            //System.out.println(weightJText.getText().trim()+wrongCount);
        }
        if (wrongCount > 0) {
            return false;
        } else {
            return true;
        }
    }

    boolean textBoxCheckerEmpty(JTextField txtBox) {
        if (txtBox.getText().trim().isEmpty()) {
            //Make background yellow if field is empty
            txtBox.setBackground(Color.YELLOW);
            return true;
        } else {
            txtBox.setBackground(Color.WHITE);
            return false;
        }
    }

    boolean isNotNumberDotOnly(JTextField txtBox) {
        String value = txtBox.getText().trim();
        for (int i = 0; i < value.length(); i++) {
            if (value.charAt(i) < '0' || value.charAt(i) > '9') {
                if (value.charAt(i) != '.') {
                    txtBox.setBackground(Color.YELLOW);
                    return true;
                }
            }
        }
        txtBox.setBackground(Color.WHITE);
        return false;
    }

    private boolean validatePatient() {
        int wrongCount = 0;
        //System.out.println("start checking patient");
        //Checking empty text fields
        if ((textBoxCheckerEmpty(nameJText)) || (isNotCharValue(nameJText))) {
            wrongCount++;
            //System.out.println(nameJText.getText().trim()+wrongCount);
        }
        if (textBoxCheckerEmpty(idJText)) {
            wrongCount++;
            //System.out.println(idJText.getText().trim()+wrongCount);
        }
        if ((textBoxCheckerEmpty(primaryDoctorJText)) || (isNotCharValue(primaryDoctorJText))) {
            wrongCount++;
            //System.out.println(primaryDoctorJText.getText().trim()+wrongCount);
        }
        if ((textBoxCheckerEmpty(prefPharmacyJText)) || (isNotCharValue(prefPharmacyJText))) {
            wrongCount++;
            //System.out.println(prefPharmacyJText.getText().trim()+wrongCount);
        }
        if (isWrongDate(dobJText)) {
            wrongCount++;
            JOptionPane.showMessageDialog(null, "Patient must be at least one year old", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
        System.out.println("validation errs   " + wrongCount);
        if (wrongCount > 0) {
            return false;
        } else {
            return true;
        }
    }

    boolean isNotCharValue(JTextField txtBox) {
        String value = txtBox.getText().trim();
        String patternString = "^[a-zA-Z\\s]*$";
        Pattern charAndSpacePattern = Pattern.compile(patternString);
        if (charAndSpacePattern.matcher(value).matches()) {
            txtBox.setBackground(Color.WHITE);
            return false;
        } else {
            txtBox.setBackground(Color.YELLOW);
            return true;
        }
    }
//    boolean isNotNumberOnly(JTextField txtBox){
//             String value= txtBox.getText().trim();
//        for (int i =0 ; i< value.length();i++){
//        if (value.charAt(i)<'0' || value.charAt(i)>'9'){         
//                txtBox.setBackground(Color.YELLOW);
//                return true;            
//        }       
//    }
//        txtBox.setBackground(Color.WHITE);
//    return false;
//    }

    private boolean isWrongDate(JSpinner dobJText) {
        if (Integer.parseInt(ageJTextLabel.getText()) < 1) {
            dobJText.setBackground(Color.YELLOW);
            return true;
        }
        dobJText.setBackground(Color.WHITE);
        return false;
    }
}
